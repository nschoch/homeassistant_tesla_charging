alias: TeslaCharging
description: Automatically set charging amperage during the day with net production
trigger:
  - platform: state
    entity_id: sensor.envoy_202142002082_current_power_production
condition:
  - type: is_plugged_in
    condition: device
    device_id: 274622938e02da4bc2fa04e6c4471950
    entity_id: binary_sensor.tesla_wall_connector_vehicle_connected
    domain: binary_sensor
  - condition: time
    before: '20:00:00'
    after: '06:00:00'
  - condition: numeric_state
    entity_id: sensor.phystepnda_battery_sensor
    below: 75
action:
  - alias: set variables
    variables:
      default_charge_amps: '48'
      vehicle_id_set: '{{ state_attr(''binary_sensor.phystepnda_online_sensor'', ''id'') }}'
      solar_production: '{{ states(''sensor.envoy_202142002082_current_power_production'') }}'
      tesla_wc_active_power: >-
        {{ (states('sensor.tesla_wall_connector_phase_a_current')|float *
        states('sensor.tesla_wall_connector_phase_a_voltage')|float) +
        (states('sensor.tesla_wall_connector_phase_b_current')|float *
        states('sensor.tesla_wall_connector_phase_b_voltage')|float) }}
      gross_consumption: '{{ states(''sensor.envoy_202142002082_current_power_consumption'') }}'
      net_consumption: '{{ gross_consumption|float - tesla_wc_active_power }}'
      available_charge_amps: '{{ ( (solar_production|float - net_consumption|float)/240 - 1 ) | int }}'
  - alias: update helper tesla_wc_active_power
    service: input_number.set_value
    target:
      entity_id: input_number.tesla_wc_active_power
    data:
      value: '{{ tesla_wc_active_power }}'
  - alias: update helper net consumption
    service: input_number.set_value
    target:
      entity_id: input_number.net_consumption
    data:
      value: '{{ net_consumption }}'
  - alias: update helper available solar charge amps
    service: input_number.set_value
    target:
      entity_id: input_number.available_solar_charge_amps
    data:
      value: '{{ available_charge_amps }}'
  - alias: wake Tesla
    service: tesla_custom.api
    data:
      command: WAKE_UP
      parameters:
        path_vars:
          vehicle_id: '{{ vehicle_id_set }}'
  - if:
      - alias: if charge amps above 4
        condition: numeric_state
        entity_id: input_number.available_solar_charge_amps
        above: 4
    then:
      - alias: set charge amps
        service: tesla_custom.api
        data:
          command: CHARGING_AMPS
          parameters:
            path_vars:
              vehicle_id: '{{ vehicle_id_set }}'
            charging_amps: '{{ available_charge_amps }}'
      - alias: start charging
        service: tesla_custom.api
        data:
          command: START_CHARGE
          parameters:
            path_vars:
              vehicle_id: '{{ vehicle_id_set }}'
    else:
      - alias: stop charging
        service: tesla_custom.api
        data:
          command: STOP_CHARGE
          parameters:
            path_vars:
              vehicle_id: '{{ vehicle_id_set }}'
      - alias: set default charge amps
        service: tesla_custom.api
        data:
          command: CHARGING_AMPS
          parameters:
            path_vars:
              vehicle_id: '{{ vehicle_id_set }}'
            charging_amps: '{{ default_charge_amps }}'
mode: single
